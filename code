saehy@DESKTOP-A050OUQ MINGW64 ~
$ git config --global user.email "saehyun327@naver.com"

saehy@DESKTOP-A050OUQ MINGW64 ~
$ git config --global user.name "didtpgus"

saehy@DESKTOP-A050OUQ MINGW64 ~
$ config --list
bash: config: command not found

saehy@DESKTOP-A050OUQ MINGW64 ~
$ git config--global user.email"saehyun327@naver.com"
git: 'config--global' is not a git command. See 'git --help'.

saehy@DESKTOP-A050OUQ MINGW64 ~
$ git config --global user.email "saehyun327@naver.com"

saehy@DESKTOP-A050OUQ MINGW64 ~
$ git config --list
diff.astextplain.textconv=astextplain
filter.lfs.clean=git-lfs clean -- %f
filter.lfs.smudge=git-lfs smudge -- %f
filter.lfs.process=git-lfs filter-process
filter.lfs.required=true
http.sslbackend=openssl
http.sslcainfo=C:/Program Files/Git/mingw64/ssl/certs/ca-bundle.crt
core.autocrlf=true
core.fscache=true
core.symlinks=false
pull.rebase=false
credential.helper=manager-core
credential.https://dev.azure.com.usehttppath=true
init.defaultbranch=master
user.email=saehyun327@naver.com
user.name=didtpgus

saehy@DESKTOP-A050OUQ MINGW64 ~
$ git init
Initialized empty Git repository in C:/Users/saehy/.git/

saehy@DESKTOP-A050OUQ MINGW64 ~ (master)
$ la -la
bash: la: command not found

saehy@DESKTOP-A050OUQ MINGW64 ~ (master)
$ mkdir saehyun

saehy@DESKTOP-A050OUQ MINGW64 ~ (master)
$ cd saehyun

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ dir

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git init
Initialized empty Git repository in C:/Users/saehy/saehyun/.git/

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git ls -a
git: 'ls' is not a git command. See 'git --help'.

The most similar command is
        lfs

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ ls -la
total 16
drwxr-xr-x 1 saehy 197609 0 Oct 25 14:38 ./
drwxr-xr-x 1 saehy 197609 0 Oct 25 14:37 ../
drwxr-xr-x 1 saehy 197609 0 Oct 25 14:38 .git/

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git add yang
fatal: pathspec 'yang' did not match any files

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git add asdf
fatal: pathspec 'asdf' did not match any files

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git add asdf.text
fatal: pathspec 'asdf.text' did not match any files

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git add test.txt
fatal: pathspec 'test.txt' did not match any files

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ ls a.txt
ls: cannot access 'a.txt': No such file or directory

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git add a.txt
fatal: pathspec 'a.txt' did not match any files

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git status:
git: 'status:' is not a git command. See 'git --help'.

The most similar command is
        status

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        a.txt.txt

nothing added to commit but untracked files present (use "git add" to track)

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git add a.txt
fatal: pathspec 'a.txt' did not match any files

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git status
On branch master

No commits yet

nothing to commit (create/copy files and use "git add" to track)

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git add cbnu.co.kr
fatal: pathspec 'cbnu.co.kr' did not match any files

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git add cbnu
fatal: pathspec 'cbnu' did not match any files

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git add cbnu
fatal: pathspec 'cbnu' did not match any files

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git add cbnu.txt
fatal: pathspec 'cbnu.txt' did not match any files

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git add cbnu.txt
fatal: pathspec 'cbnu.txt' did not match any files

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git add C:Temp/cbnu.txt
fatal: C:Temp/cbnu.txt: 'C:Temp/cbnu.txt' is outside repository at 'C:/Users/saehy/saehyun'

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git add C:user/saehy/cbnu.txt
fatal: Invalid path 'C:/user': No such file or directory

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ ls -la
total 24
drwxr-xr-x 1 saehy 197609 0 Oct 25 14:58 ./
drwxr-xr-x 1 saehy 197609 0 Oct 25 15:12 ../
drwxr-xr-x 1 saehy 197609 0 Oct 25 15:17 .git/

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ vim

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ vim

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git add cbnu.txt
fatal: pathspec 'cbnu.txt' did not match any files

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git add cbnu

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git rm cbnu
error: the following file has changes staged in the index:
    cbnu
(use --cached to keep the file, or -f to force removal)

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ ls
cbnu

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   cbnu


saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git commit
Aborting commit due to empty commit message.

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git log
fatal: your current branch 'master' does not have any commits yet

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git commit
Aborting commit due to empty commit message.

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git log
fatal: your current branch 'master' does not have any commits yet

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git commit
[master (root-commit) 0301d09] Hello
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 cbnu

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git log
commit 0301d0904ea6ffd8cce0bcc8502d48849bb84baa (HEAD -> master)
Author: didtpgus <saehyun327@naver.com>
Date:   Mon Oct 25 15:52:03 2021 +0900

    Hello

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git log -p
commit 0301d0904ea6ffd8cce0bcc8502d48849bb84baa (HEAD -> master)
Author: didtpgus <saehyun327@naver.com>
Date:   Mon Oct 25 15:52:03 2021 +0900

    Hello

diff --git a/cbnu b/cbnu
new file mode 100644
index 0000000..e69de29

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git log --graph
* commit 0301d0904ea6ffd8cce0bcc8502d48849bb84baa (HEAD -> master)
  Author: didtpgus <saehyun327@naver.com>
  Date:   Mon Oct 25 15:52:03 2021 +0900

      Hello

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git log -1
commit 0301d0904ea6ffd8cce0bcc8502d48849bb84baa (HEAD -> master)
Author: didtpgus <saehyun327@naver.com>
Date:   Mon Oct 25 15:52:03 2021 +0900

    Hello

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git reset HEAD^
fatal: ambiguous argument 'HEAD^': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git reset --soft HEAD^
fatal: ambiguous argument 'HEAD^': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ got reset --hard
bash: got: command not found

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git commit -a
On branch master
nothing to commit, working tree clean

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git log
commit 0301d0904ea6ffd8cce0bcc8502d48849bb84baa (HEAD -> master)
Author: didtpgus <saehyun327@naver.com>
Date:   Mon Oct 25 15:52:03 2021 +0900

    Hello

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ vim

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git commit
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        cbnu2

nothing added to commit but untracked files present (use "git add" to track)

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git add cbnu2
warning: LF will be replaced by CRLF in cbnu2.
The file will have its original line endings in your working directory

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ ls
cbnu  cbnu2

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git commit
Aborting commit due to empty commit message.

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git commit -a
Aborting commit due to empty commit message.

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git reset HEAD^
fatal: ambiguous argument 'HEAD^': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git reset --soft HEAD^
fatal: ambiguous argument 'HEAD^': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   cbnu2


saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git log
commit 0301d0904ea6ffd8cce0bcc8502d48849bb84baa (HEAD -> master)
Author: didtpgus <saehyun327@naver.com>
Date:   Mon Oct 25 15:52:03 2021 +0900

    Hello

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git commit
hint: Waiting for your editor to close the file...
[No write since last change]
/usr/bin/bash: q: command not found

shell returned 127

Press ENTER or type command to continue
[No write since last change]
/usr/bin/bash: q: command not found

shell returned 127

Press ENTER or type command to continue
Aborting commit due to empty commit message.

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git commit
[master 91fd798] commit 2
 1 file changed, 1 insertion(+)
 create mode 100644 cbnu2

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git log
commit 91fd79892128a28f61c1b2212b38573ae518a38f (HEAD -> master)
Author: didtpgus <saehyun327@naver.com>
Date:   Mon Oct 25 16:07:28 2021 +0900

    commit 2

commit 0301d0904ea6ffd8cce0bcc8502d48849bb84baa
Author: didtpgus <saehyun327@naver.com>
Date:   Mon Oct 25 15:52:03 2021 +0900

    Hello

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git reset HEAD^

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git log
commit 0301d0904ea6ffd8cce0bcc8502d48849bb84baa (HEAD -> master)
Author: didtpgus <saehyun327@naver.com>
Date:   Mon Oct 25 15:52:03 2021 +0900

    Hello

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git reset --soft Head^
fatal: ambiguous argument 'Head^': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git add cbnu2
warning: LF will be replaced by CRLF in cbnu2.
The file will have its original line endings in your working directory

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git log
commit 0301d0904ea6ffd8cce0bcc8502d48849bb84baa (HEAD -> master)
Author: didtpgus <saehyun327@naver.com>
Date:   Mon Oct 25 15:52:03 2021 +0900

    Hello

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git commit
[master a8e4dcb] commit 2
 1 file changed, 1 insertion(+)
 create mode 100644 cbnu2

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git log
commit a8e4dcbc9a9d46843de5aeb39155404698613391 (HEAD -> master)
Author: didtpgus <saehyun327@naver.com>
Date:   Mon Oct 25 16:09:32 2021 +0900

    commit 2

commit 0301d0904ea6ffd8cce0bcc8502d48849bb84baa
Author: didtpgus <saehyun327@naver.com>
Date:   Mon Oct 25 15:52:03 2021 +0900

    Hello

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git reset --soft HEAD^

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git log
commit 0301d0904ea6ffd8cce0bcc8502d48849bb84baa (HEAD -> master)
Author: didtpgus <saehyun327@naver.com>
Date:   Mon Oct 25 15:52:03 2021 +0900

    Hello

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git add cbnu2

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git commit
[master e4e8650] commit 2
 1 file changed, 1 insertion(+)
 create mode 100644 cbnu2

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git log
commit e4e86501fd59ff9df102425c887d8d3f18aa13e3 (HEAD -> master)
Author: didtpgus <saehyun327@naver.com>
Date:   Mon Oct 25 16:10:38 2021 +0900

    commit 2

commit 0301d0904ea6ffd8cce0bcc8502d48849bb84baa
Author: didtpgus <saehyun327@naver.com>
Date:   Mon Oct 25 15:52:03 2021 +0900

    Hello

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git reset --hard
HEAD is now at e4e8650 commit 2

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git log
commit e4e86501fd59ff9df102425c887d8d3f18aa13e3 (HEAD -> master)
Author: didtpgus <saehyun327@naver.com>
Date:   Mon Oct 25 16:10:38 2021 +0900

    commit 2

commit 0301d0904ea6ffd8cce0bcc8502d48849bb84baa
Author: didtpgus <saehyun327@naver.com>
Date:   Mon Oct 25 15:52:03 2021 +0900

    Hello

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git add cbnu2

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git commit
On branch master
nothing to commit, working tree clean

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git branch
* master

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git branch exp

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git branch
  exp
* master

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git checkout exp
Switched to branch 'exp'

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (exp)
$ git log --graph
* commit e4e86501fd59ff9df102425c887d8d3f18aa13e3 (HEAD -> exp, master)
| Author: didtpgus <saehyun327@naver.com>
| Date:   Mon Oct 25 16:10:38 2021 +0900
|
|     commit 2
|
* commit 0301d0904ea6ffd8cce0bcc8502d48849bb84baa
  Author: didtpgus <saehyun327@naver.com>
  Date:   Mon Oct 25 15:52:03 2021 +0900

      Hello

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (exp)
$ git merge
fatal: No remote for the current branch.

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (exp)
$ git branch
* exp
  master

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (exp)
$ git checkout -b branch1
Switched to a new branch 'branch1'

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch1)
$ git branch -m exp exp1

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch1)
$ git checkout -b branch2
Switched to a new branch 'branch2'

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch2)
$ vim

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch2)
$ git add cbnu3
warning: LF will be replaced by CRLF in cbnu3.
The file will have its original line endings in your working directory

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch2)
$ git checkout -b branch3
Switched to a new branch 'branch3'

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch3)
$ git branch
  branch1
  branch2
* branch3
  exp1
  master

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch3)
$ git log
commit e4e86501fd59ff9df102425c887d8d3f18aa13e3 (HEAD -> branch3, master, exp1, branch2, branch1)
Author: didtpgus <saehyun327@naver.com>
Date:   Mon Oct 25 16:10:38 2021 +0900

    commit 2

commit 0301d0904ea6ffd8cce0bcc8502d48849bb84baa
Author: didtpgus <saehyun327@naver.com>
Date:   Mon Oct 25 15:52:03 2021 +0900

    Hello

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch3)
$ git checkout exp1
Switched to branch 'exp1'
A       cbnu3

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (exp1)
$ git branch -d branch3
Deleted branch branch3 (was e4e8650).

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (exp1)
$ git checkout -b branch3
Switched to a new branch 'branch3'

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch3)
$ vim

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch3)
$ git add new
warning: LF will be replaced by CRLF in new.
The file will have its original line endings in your working directory

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch3)
$ git merge exp1
Already up to date.

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch3)
$ git merge branch3
Already up to date.

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch3)
$ git commit
[branch3 d94e199] final commit
 2 files changed, 2 insertions(+)
 create mode 100644 cbnu3
 create mode 100644 new

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch3)
$ git  push origin exp1
fatal: 'origin' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch3)
$ git push git-learn exp1
fatal: 'git-learn' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch3)
$ git push origin master
fatal: 'origin' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch3)
$ git remote add origin "remote repository address"

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch3)
$ git remote
origin

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch3)
$ git remote add origin git@github.com:didtpgus/github-learn.git
error: remote origin already exists.

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch3)
$ git push -u origin exp1
fatal: 'remote repository address' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch3)
$ git remote add origin git@github.com:didtpgus/github-learn.git
error: remote origin already exists.

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch3)
$ git remote origin git@github.com:didtpgus/github-learn.git
error: Unknown subcommand: origin
usage: git remote [-v | --verbose]
   or: git remote add [-t <branch>] [-m <master>] [-f] [--tags | --no-tags] [--mirror=<fetch|push>] <name> <url>
   or: git remote rename <old> <new>
   or: git remote remove <name>
   or: git remote set-head <name> (-a | --auto | -d | --delete | <branch>)
   or: git remote [-v | --verbose] show [-n] <name>
   or: git remote prune [-n | --dry-run] <name>
   or: git remote [-v | --verbose] update [-p | --prune] [(<group> | <remote>)...]
   or: git remote set-branches [--add] <name> <branch>...
   or: git remote get-url [--push] [--all] <name>
   or: git remote set-url [--push] <name> <newurl> [<oldurl>]
   or: git remote set-url --add <name> <newurl>
   or: git remote set-url --delete <name> <url>

    -v, --verbose         be verbose; must be placed before a subcommand


saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch3)
$ git push -u origin branch3
fatal: 'remote repository address' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch3)
$ git remote
origin

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch3)
$ git remote add origin https://github.com/didtpgus/github-learn.git
error: remote origin already exists.

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch3)
$ git init
Reinitialized existing Git repository in C:/Users/saehy/saehyun/.git/

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch3)
$ git add README.md
fatal: pathspec 'README.md' did not match any files

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch3)
$ git remote add origin https://github.com/didtpgus/github-learn.git
error: remote origin already exists.

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch3)
$ git checkout master
Switched to branch 'master'

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git remote add origin https://github.com/didtpgus/github-learn.git
error: remote origin already exists.

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git remote add origin
usage: git remote add [<options>] <name> <url>

    -f, --fetch           fetch the remote branches
    --tags                import all tags and associated objects when fetching
                          or do not fetch any tag at all (--no-tags)
    -t, --track <branch>  branch(es) to track
    -m, --master <branch>
                          master branch
    --mirror[=(push|fetch)]
                          set up remote as a mirror to push to or fetch from


saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git commit
On branch master
nothing to commit, working tree clean

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ checkout exp1
bash: checkout: command not found

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (master)
$ git checkout exp1
Switched to branch 'exp1'

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (exp1)
$ git commit
On branch exp1
nothing to commit, working tree clean

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (exp1)
$ git checkout branch3
Switched to branch 'branch3'

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch3)
$ git commit
On branch branch3
nothing to commit, working tree clean

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch3)
$ git branch
  branch1
  branch2
* branch3
  exp1
  master

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch3)
$ git remote add origin https://github.com/didtpgus/github-learn.git
error: remote origin already exists.

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch3)
$ git remote add origin2 https://github.com/didtpgus/github-learn.git

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch3)
$ git remote add origin git@github.com:didtpgus/open-sw.git
error: remote origin already exists.

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch3)
$ git remote add open-sw git@github.com:didtpgus/open-sw.git

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch3)
$ git push -u open-sw master
The authenticity of host 'github.com (52.78.231.108)' can't be established.
RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.
This key is not known by any other names
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added 'github.com' (RSA) to the list of known hosts.
git@github.com: Permission denied (publickey).
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch3)
$ git push -u origin2 master



git
Enumerating objects: 6, done.
Counting objects: 100% (6/6), done.
Delta compression using up to 8 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (6/6), 443 bytes | 443.00 KiB/s, done.
Total 6 (delta 0), reused 0 (delta 0), pack-reused 0
remote:
remote: Create a pull request for 'master' on GitHub by visiting:
remote:      https://github.com/didtpgus/github-learn/pull/new/master
remote:
To https://github.com/didtpgus/github-learn.git
 * [new branch]      master -> master
Branch 'master' set up to track remote branch 'master' from 'origin2'.

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch3)
$

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch3)
$

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch3)
$

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch3)
$ git
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           [--super-prefix=<path>] [--config-env=<name>=<envvar>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone             Clone a repository into a new directory
   init              Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add               Add file contents to the index
   mv                Move or rename a file, a directory, or a symlink
   restore           Restore working tree files
   rm                Remove files from the working tree and from the index
   sparse-checkout   Initialize and modify the sparse-checkout

examine the history and state (see also: git help revisions)
   bisect            Use binary search to find the commit that introduced a bug
   diff              Show changes between commits, commit and working tree, etc
   grep              Print lines matching a pattern
   log               Show commit logs
   show              Show various types of objects
   status            Show the working tree status

grow, mark and tweak your common history
   branch            List, create, or delete branches
   commit            Record changes to the repository
   merge             Join two or more development histories together
   rebase            Reapply commits on top of another base tip
   reset             Reset current HEAD to the specified state
   switch            Switch branches
   tag               Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch             Download objects and refs from another repository
   pull              Fetch from and integrate with another repository or a local branch
   push              Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch3)
$ git merge
fatal: No remote for the current branch.

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch3)
$ git merge master
Already up to date.

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch3)
$ git merge exp1
Already up to date.

saehy@DESKTOP-A050OUQ MINGW64 ~/saehyun (branch3)
$

